# ============================
# Environment configurations
# ============================

export PATH="$HOME/.local/bin:$PATH"

if [ -f $HOME/.env ]; then
    source $HOME/.env
fi

# ============================
# History configurations
# ============================

HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000

# ============================
# Git branch configurations
# ============================

parse_git_branch() {
    if ! git rev-parse --is-inside-work-tree &>/dev/null; then
        return
    fi

    local branch_name="$(git symbolic-ref HEAD 2>/dev/null)" 
    branch_name=${branch_name##refs/heads/} 

    local remote_name="$(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD))" 
    local ahead_behind="$(git rev-list --left-right --count $branch_name...$remote_name 2>/dev/null)"
    
    local git_status="$(git status 2> /dev/null)"
    local status_indicator=""

    if [[ ! $git_status =~ "nothing to commit" ]]; then
        status_indicator="*"
    fi
    
    if [[ ! -z $branch_name ]]; then
        branch_info=" ($branch_name$status_indicator)"
    fi

    if [[ ! -z $ahead_behind ]]; then
        IFS=$'\t' read -r ahead behind <<< "$ahead_behind"
        if [ "$ahead" -gt 0 ]; then
            ahead_info=" [ahead $ahead]"
        fi
        if [ "$behind" -gt 0 ]; then
            behind_info=" [behind $behind]"
        fi
    fi
    printf "%s%s%s" "$branch_info" "$ahead_info" "$behind_info"
}

# ============================
# Aliases and Autocompletion
# ============================

if [ -x /usr/bin/dircolors ]; then
    test -r $HOME/.dircolors && eval "$(dircolors -b $HOME/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Editor configurations
export EDITOR="/usr/bin/vim"

# Source additional files
[ -f $HOME/.aliases ] && source $HOME/.aliases
[ -f $HOME/.functions ] && source $HOME/.functions
[ -f $HOME/.exports ] && source $HOME/.exports

# Starship configurations
if command -v starship &>/dev/null; then
    eval "$(starship init bash)"
fi

# NVM configurations
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# GitHub Copilot CLI configurations
if command -v gh &>/dev/null; then
    eval "$(gh copilot alias -- bash)"
fi

# Telepresence configurations
if command -v telepresence &>/dev/null; then
    source <(telepresence completion bash)
fi

# KUBECONFIG environment variable
if [ -d "$HOME/.kube" ]; then
    export KUBECONFIG=$(find "$HOME/.kube" -path "$HOME/.kube/cache" -prune -o -type f -print | sed 's/$/:/' | tr -d '\n' | sed 's/:$//')
fi
